on pageload body.innerHTML = html code als string 
    - load currentweather icon and write in current weather section
        dom element = currentWeather.getIconLink()

    - load currentWeather Background
        background.src = currentWeather.getBackgroundLink();

    - load current temperature in either celsius or fahrenheit and write in
      current weather section
        dom Element = kelvinToCelsius(currentWeather.temperature);

    - load currentweathers pop and write in current weather section
        dom Element = currentWeather.precipitation;

    - load windspeed current and write in current weather section
        dom Element = currentWeather.windspeed;

    - load humidity and...
        dom Element = currentWeather.humidity;

    - load currentWeather Day in writen format
        dom Element = currentWeather.getWeekDay();

    - load current date in format Monday, March 29 or 03.December 
      depending on language
        dom Element = currentWeather.getMonthAndDayDate();

    -load and write City Name, CountryCode
        dom Element = currentWeather.getCityNameAndCountryCode();

    - load Current Time
        dom Element = currentWeather.getCurrentTime();

    - create hour elements of the current day and give them ascending data-index-day 
      and data-index-hour attribute. First day in daysForecast already contains currentweather 
      as an hourData in the data array 
        - all elements :
            loop over data array of the first object in the daysForecast
            daysForecast[0].data.forEach((hour,i)=>{
                domTIme = daysForecast[0].data[i].time;
                domIcon = daysForecast[0].data[i].getIconLink();
                domTemp = daysForecast[0].data[i].temperature;
                data-index-hour = i:
                data-index-day = 0;
            })


    - create day Cards, also give them data-index attribute ascending
        - next day cards : 
            daysForecast.forEach((day,i)=>{
                domWeekday = daysForecast[i].getWeekDay()!==currentWeather.getWeekDay() ? 
                             daysForecast[i].getWeekDay() : 
                             "today";
                domMonthandData = daysForecast[i].getMonthAndDayDate();
                domIcon = daysForecast[i].getIconLink();
                domMinTemp = daysForecast[i].getMinTemp();
                domMaxTemp = daysForecast[i].getMaxTemp();
                data-index-day = i;
            })

click on hour Symbol, change values for dom elements in the current weather section
depending on the data-index attribute of the clicked element
    - icon = daysForecast[data-index-day].data[data-index-hour].getIconLink()
    - Temperatur = daysForecast[data-index-day].data[data-index-hour].temperature
    - precipitation = daysForecast[data-index-day].data[data-index-hour].precipitation
    - humidity = daysForecast[data-index-day].data[data-index-hour].humidity
    - windspeed = daysForecast[data-index-day].data[data-index-hour].windspeed
    - Time = daysForecast[data-index-day].data[data-index-hour].time
    if (background.src !== daysForecast[data-index-day].data[data-index-hour].getBackgroundLink()) {
            background.src = daysForecast[data-index-day].data[data-index-hour].getBackgroundLink();
        }

click on Day Card, change currentweather to first hour object in data array with
index of the data-index-day attribute of the clicked day card
and change/create hour sections with new data-index-hour and data-index-day
and change backgroundvideo link if weathercon is different
    - currentweather
        - icon = daysForecast[data-index-day].data[0].getIconLink()
        - Temperatur = daysForecast[data-index-day].data[0].temperature
        - precipitation = daysForecast[data-index-day].data[0].precipitation
        - humidity = daysForecast[data-index-day].data[0].humidity
        - windspeed = daysForecast[data-index-day].data[0].windspeed
        - Day and Month Date = daysForecast[data-index-day].getMonthAndDayDate("DE")
        - Time = daysForecast[data-index-day].data[0].time
        if (background.src !== daysForecast[data-index-day].data[0].getBackgroundLink()) {
            background.src = daysForecast[data-index-day].data[0].getBackgroundLink();
        }
    
    - hour section
        daysForecast[data-index-day].data.forEach((hour,i)=>{
            domTime = hour.time;
            domIcon = hour.getIconLink();
            domTemp = hour.temperature;
            data-index-hour = i;
            data-index-day = data-index-day;
        })

after typing a correct city name and country code in the search bar and hitting
enter or pressing the search icon, do a pageload with entered city and country 

innerHTML:
<video class ="video" autoplay muted loop id="myVideo">
    <source src="${currentWeather.getBackgroundLink()}" type="video/mp4">
</video>
<div class="overlay">
    <div class="currentW">
        <p class="currentW" id="date"></p>
        <p class="currentW" id="city"></p>
        <p class="currentW" id="time"></p>
        <img class="icon" src="${currentWeather.getIconLink()}">
        <p class="currentW" id="temp"></p>
        <p class="currentW">Niederschlag: <span id="pop"></span>% </p>
        <p class="currentW">Luftfeuchte: <span id="humid"></span>% </p>
        <p class="currentW">Windgeschw: <span id="wind"></span>km/h </p>
    </div>
    <div class="hourSection">
        <div class="hour" data-index-hour="x" data-index-day="y">
            <p id="time"></p>
            <img class="icon" src="${currentWeather.getIconLink()}">
            <p id="temp"></p>
        </div>
    </div>
    <div class="daySection">
        <div class="day">
            <p id="weekday"></p>
            <img class="icon" src="${currentWeather.getIconLink()}">
            <p><span id="minTemp"></span>°C - <span id="maxTemp"></span>°C</p>
        </div>
    </div>
</div>

function createHourElements(day,dayIndex) {
    let htmlString = ``
    day.data.forEach((hour,i)=>{
        htmlString += `<div class="hour" data-index-hour="${i}" data-index-day="${dayIndex}">
                            <p id="time">${hour.time}</p>
                            <img class="icon" src="${hour.getIconLink()}">
                            <p id="temp">${kelvinToCelsius(hour.temperature)}°C</p>
                        </div>`;
    })
    return htmlString;
}

function createDayElements(currentWeather,daysForecast) {
    htmlString = ``;
    daysForecast.forEach((day,i)=>{
        htmlString += `<div class="day" data-index-day="${i}">
                        <p id="weekday">${day.getWeekDay()!==currentWeather.getWeekDay() ? 
                                            day.getWeekDay() : 
                                            "today"}</p>
                        <img class="icon" src="${day.getIconLink()}">
                        <p><span id="minTemp">${day.getMinTemp()}</span>°C - <span id="maxTemp">${getMaxTemp()}</span>°C</p>
                    </div>`
    })
    return htmlString;
}

function changeBackground() {
    document.querySelector(source).src = daysForecast[data-index-day].data[data-index-hour].getBackgroundLink();
}

function pageLoad(currentWeather,daysForecast) {
    const hoursHtml = createHourElements(daysForecast[0],0);
    const daysHtml = createDayElements(currentWeather,daysForecast);
    document.querySelector("body").innerHTML = `
    <video class ="video" autoplay muted loop id="myVideo">
        <source src="${currentWeather.getBackgroundLink()}" type="video/mp4">
    </video>
    <div class="overlay">
        <div class="currentW">
            <p class="currentW" id="date">${currentWeather.getMonthAndDayDate()}</p>
            <p class="currentW" id="city">${currentWeather.getCityNameAndCountryCode}</p>
            <p class="currentW" id="time">${currentWeather.getCurrentTime()}</p>
            <img class="icon" src="${currentWeather.getIconLink()}">
            <p class="currentW" id="temp">${currentWeather.temperature}</p>
            <p class="currentW">Niederschlag: <span id="pop">${currentWeather.precipitation}</span>% </p>
            <p class="currentW">Luftfeuchte: <span id="humid">${currentWeather.humidity}</span>% </p>
            <p class="currentW">Windgeschw: <span id="wind">${currentWeather.windspeed}</span>km/h </p>
        </div>
        <div class="hourSection">
            ${hoursHtml}
        </div>
        <div class="daySection">
            ${daysHtml}
        </div>
    </div>`
}

function changeCurrentWeather() {
    
}